"""foreign key constraint in user table

Revision ID: 70d52435edf2
Revises: 
Create Date: 2022-12-28 17:55:50.800653

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '70d52435edf2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('confirmation_codes')
    op.drop_table('errors')
    op.drop_table('users')
    op.drop_table('reviews')
    op.drop_table('pooling')
    op.drop_table('cars')
    op.drop_table('reset_codes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reset_codes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('reset_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'used', name='codestatus'), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='reset_codes_pkey')
    )
    op.create_table('cars',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cars_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('car_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('car_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='cars_owner_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='cars_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pooling',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_depart', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('available_seats', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('beg_dest', postgresql.ENUM('Tunis', 'Beja', 'Kef', 'Sousse', 'Mahdia', 'Nabeul', 'Ariana', 'Ben_Arous', 'Manouba', 'Zaghouan', 'Bizerte', 'Jendouba', 'Sfax', 'Siliana', 'Monastir', 'Kairouan', 'Kasserine', 'Sidi_Bouzid', 'Gabes', 'Medenine', 'Tataouine', 'Gafsa', 'Tozeur', 'Kebeli', name='city'), autoincrement=False, nullable=False),
    sa.Column('end_dest', postgresql.ENUM('Tunis', 'Beja', 'Kef', 'Sousse', 'Mahdia', 'Nabeul', 'Ariana', 'Ben_Arous', 'Manouba', 'Zaghouan', 'Bizerte', 'Jendouba', 'Sfax', 'Siliana', 'Monastir', 'Kairouan', 'Kasserine', 'Sidi_Bouzid', 'Gabes', 'Medenine', 'Tataouine', 'Gafsa', 'Tozeur', 'Kebeli', name='city'), autoincrement=False, nullable=False),
    sa.Column('price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('driver_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('car_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], name='pooling_car_id_fkey'),
    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], name='pooling_driver_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='pooling_pkey')
    )
    op.create_table('reviews',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('stars', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reviewer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], name='reviews_reviewer_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='reviews_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='reviews_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('gender', postgresql.ENUM('Male', 'Female', name='gender'), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('cin', name='users_cin_key'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    op.create_table('errors',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('orig', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('params', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('statement', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='errors_pkey')
    )
    op.create_table('confirmation_codes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('confirmation_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'used', name='codestatus'), autoincrement=False, nullable=False),
    sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='confirmation_codes_pkey')
    )
    # ### end Alembic commands ###
